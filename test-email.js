/**
 * Script de prueba para env√≠o de emails
 * Ejecutar con: node test-email.js
 */

import { sendConfirmationEmail, sendPasswordResetEmail } from './src/services/emailService.js';

async function testEmails() {
  console.log('üß™ Probando env√≠o de emails...\n');

  try {
    // Probar email de confirmaci√≥n para deudor
    console.log('üìß Enviando email de confirmaci√≥n para deudor...');
    const confirmationResult = await sendConfirmationEmail(
      'test@example.com',
      'Juan P√©rez',
      'test-confirmation-token',
      'debtor'
    );

    if (confirmationResult.success) {
      console.log('‚úÖ Email de confirmaci√≥n enviado exitosamente');
      console.log('   ID del mensaje:', confirmationResult.messageId);
    } else {
      console.log('‚ùå Error enviando email de confirmaci√≥n:', confirmationResult.error);
    }

    console.log('');

    // Probar email de confirmaci√≥n para empresa
    console.log('üìß Enviando email de confirmaci√≥n para empresa...');
    const companyConfirmationResult = await sendConfirmationEmail(
      'empresa@example.com',
      'Mar√≠a Gonz√°lez',
      'test-company-confirmation-token',
      'company'
    );

    if (companyConfirmationResult.success) {
      console.log('‚úÖ Email de confirmaci√≥n para empresa enviado exitosamente');
      console.log('   ID del mensaje:', companyConfirmationResult.messageId);
    } else {
      console.log('‚ùå Error enviando email de confirmaci√≥n para empresa:', companyConfirmationResult.error);
    }

    console.log('');

    // Probar email de confirmaci√≥n para administrador
    console.log('üìß Enviando email de confirmaci√≥n para administrador...');
    const adminConfirmationResult = await sendConfirmationEmail(
      'admin@example.com',
      'Administrador del Sistema',
      'test-admin-confirmation-token',
      'god_mode'
    );

    if (adminConfirmationResult.success) {
      console.log('‚úÖ Email de confirmaci√≥n para administrador enviado exitosamente');
      console.log('   ID del mensaje:', adminConfirmationResult.messageId);
    } else {
      console.log('‚ùå Error enviando email de confirmaci√≥n para administrador:', adminConfirmationResult.error);
    }

    console.log('');

    // Probar email de recuperaci√≥n de contrase√±a
    console.log('üìß Enviando email de recuperaci√≥n de contrase√±a...');
    const resetResult = await sendPasswordResetEmail(
      'test@example.com',
      'Juan P√©rez',
      'test-reset-token'
    );

    if (resetResult.success) {
      console.log('‚úÖ Email de recuperaci√≥n de contrase√±a enviado exitosamente');
      console.log('   ID del mensaje:', resetResult.messageId);
    } else {
      console.log('‚ùå Error enviando email de recuperaci√≥n de contrase√±a:', resetResult.error);
    }

    console.log('\nüéâ Pruebas completadas!');

  } catch (error) {
    console.error('üí• Error durante las pruebas:', error);
  }
}

// Ejecutar pruebas
testEmails();